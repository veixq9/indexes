{"version":3,"sources":["tunnl71/electron_game/player.cljs"],"mappings":";AAKA,iCAAA,jCAAKA;AAEL,uCAAA,vCAAMC,sFACHC;AADH,AAEE,kBAAKA;AAAL,AAAA,0FAAA,0GAAA,2CAAA,6DAAA;AAAA,AAEe,uFAAA,mFAAA,sGAAA,zQAACC,mDAAMD,UAAME,wQAA+C,AAACC;WAF5E;;;AAKF,+CAAA,/CAAMC,sGACHJ,MAAMK;AADT,AAAA;AAAA,AAEG,OAACJ,mDAAMD,MAAM,WAAKM;AAAL,AAAW,IAAAC,kBAAA;IAAAC,kBAAO,CAAGH,IAAEC;AAAZ,AAAA,SAAAC,kBAAAC,mBAAAD,kBAAAC;;;;AAE3B,wCAAA,xCAAMC,wFACHT;AADH,AAEE,kBAAKA;AAAL,AAAA,0FAAA,0GAAA,2CAAA,4JAAA,/FAC+C,AAACI,6CAAgBJ,UAAMF;;;AAGxE,8CAAA,9CAAMY,oGACHV;AADH,AAEE,kBAAKA;AAAL,AAAA,0FAAA,0GAAA,2CAAA,oKAAA,vGAC+C,AAACI,6CAAgBJ,UAAM,CAAA,MAAKF;;;AAI7E,0CAAA,1CAAMa,4FACHX;AADH,AAEE,kBAAKA;AAAL,AAAA,0FAAA,0GAAA,2CAAA,gKAAA,nGAC+C,AAACI,6CAAgBJ,UAAM,GAAGF;;;AAI3E,gDAAA,hDAAMc,wGACHZ;AADH,AAEE,kBAAKA;AAAL,AAAA,0FAAA,0GAAA,2CAAA,wKAAA,3GAC+C,AAACI,6CAAgBJ,UAAM,GAAG,CAAA,MAAKF;;;AAIhF,qCAAA,rCAAMe,kFACHb;AADH,AAEE,IAAAc,gBAAA,AAAAC,8BAAA;AAAA,AAAA,IAAAC,2BAAAC;AAAA,AAAA,GAAA,CAAAD,4BAAA;AAAA;AAAA,IAAAE,yBAAAF;AAAA,AAAA,GAAA,CAAA,AAAAF,6BAAA,AAAAI;AAAA,AAAA,GAAAC;AAAA,AAAA,AAAA,EAAAC,wBAAAC,4BAAAC,eAAA,CAAA,iDAAA;;AAAA;;AAAA;;AAAA,CAAA,AAAAR,2BAAA,AAAAI;;;AAAA,IAAAK,YAAA,CAAA,AAAAT,yBAAA;qBAAA,EAAA,EAAAS,eAAA,AAAAC,cAAA,AAAAV,6BAAA,SAAA,CAAAA,cAAA,8DAAA,CAAAA,cAAA,pLAAaY,8GAAe,gDAAA,hDAACC;IAA7BF,WAAA,AACE,WAAKzB;AAAL,AAAA,0FAAA,0GAAA,2CAAA,6DAAA;AAAA,AACgD,GAAI,6CAAA,IAAA,AAAA4B,jDAACC,iEAAK7B;AACR,uCAAA,AAAA4B,hCAACE,sBAAO9B,0BAAO0B;;AACf,AAAI,qCAAA,AAAAE,rCAACE,sBAAOJ,+BAAgB1B;;AACxB,uCAAA,hCAAC8B,sBAAO9B;;WAC3D,gFAAA,SAAA,vFAAI,6CAAA,IAAA,AAAA4B,jDAACC,iEAAK7B;;AANf,AAAAyB;;AAYF,wCAAA,xCAAMM,wFACH/B;AADH,AAEE,IAAMgC,OAAK,0BAAA,mFAAA,qDAAA,lKAACC,oBAASjC;AAArB,AAAA,0FAAA,2EAAA,mFAAA,sEAAA,sIAAA,mFAAA,iDAAA,AAAA4B,8BAAA,8IAAA,wIAAA,mIAAA,sIAAA,pvBAGK7B,qCAAQC,kKAEHgC,iGAELpB,8CAAYoB,gGACZrB,wCAAWqB,gGAEXnB,mCAAMmB,gGACNvB,sCAASuB,gGACTtB,4CAAUsB","names":["tunnl71.electron-game.player/n","tunnl71.electron-game.player/refresh","state","cljs.core.swap_BANG_","cljs.core/assoc-in","tunnl71.electron_game.matrix.refresh","tunnl71.electron-game.player/speed-update-fn","n","this","x__5130__auto__","y__5131__auto__","tunnl71.electron-game.player/speed-up","tunnl71.electron-game.player/speed-up+","tunnl71.electron-game.player/speed-down","tunnl71.electron-game.player/speed-down+","tunnl71.electron-game.player/pause","with-let65457","reagent.ratom/with-let-values","temp__5808__auto__","reagent.ratom/*ratom-context*","c__19097__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init65458","cljs.core/not","res65459","previous-state","reagent.core.atom","cljs.core/deref","cljs.core._EQ_","cljs.core/reset!","tunnl71.electron-game.player/controls","tick","reagent.core/cursor"],"sourcesContent":["(ns tunnl71.electron-game.player\n  (:require\n   [reagent.core :as r]\n   [tunnl71.electron-game.matrix]))\n\n(def n 1)\n\n(defn refresh\n  [state]\n  (fn [state]\n    [:button.w3-button.w3-hover-black\n     {:on-click #(swap! state assoc-in [:tunnl71.electron-game.matrix :core] (tunnl71.electron-game.matrix/refresh))} \"\u23ce\"\n     ]))\n\n(defn speed-update-fn\n  [state n]\n  #(swap! state (fn [this] (max 0 (+ n this )))))\n\n(defn speed-up\n  [state]\n  (fn [state]\n    [:button.w3-button.w3-hover-black {:on-click (speed-update-fn state n)}\n     \">\"]))\n\n(defn speed-up+\n  [state]\n  (fn [state]\n    [:button.w3-button.w3-hover-black {:on-click (speed-update-fn state (* 2 n))}\n     \">>\"\n     ]))\n\n(defn speed-down\n  [state]\n  (fn [state]\n    [:button.w3-button.w3-hover-black {:on-click (speed-update-fn state (- n))}\n     \"<\"\n     ]))\n\n(defn speed-down+\n  [state]\n  (fn [state]\n    [:button.w3-button.w3-hover-black {:on-click (speed-update-fn state (- (* 2 n)))}\n     \"<<\"\n     ]))\n\n(defn pause\n  [state]\n  (r/with-let [previous-state (r/atom nil)]\n    (fn [state]\n      [:button.w3-button.w3-hover-black {:on-click #(if (= 0 @state)\n                                                      (reset! state @previous-state)\n                                                      (do (reset! previous-state @state)\n                                                          (reset! state 0)))}\n       (if (= 0 @state)\n         \"\u25b6\"\n         \"\u23f8\"\n         )])))\n\n\n(defn controls\n  [state]\n  (let [tick (r/cursor state [:step :nu])]\n    [:div.w3-cell-row\n     [:div.w3-center\n      [refresh state]\n\n      [:h3 @tick ]\n    \n      [speed-down+ tick]\n      [speed-down tick]\n\n      [pause tick]\n      [speed-up tick]\n      [speed-up+ tick]]]))\n"]}