{"version":3,"sources":["tunnl71/ghwebpage/core.cljs"],"mappings":"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","names":["tunnl71.ghwebpage.core/edn->hiccup","edn","cljs.core/map?","cljs.core.into","iter__5523__auto__","s__24323","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__24325","cljs.core/chunk-buffer","i__24324","vec__24326","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__24322","cljs.core/chunk-rest","vec__24329","cljs.core/first","cljs.core/cons","cljs.core/rest","k","v","tunnl71.tools.core.uuid","cljs.core/sequential?","cljs.core.apply","cljs.core/str","cljs.core.interpose","tunnl71.ghwebpage.core/data","hiccup-data","s__24334","b__24336","i__24335","map__24337","cljs.core/--destructure-map","cljs.core.get","iter__24333","map__24338","title","url","e","html-data","hiccups.runtime/render-html","tunnl71.ghwebpage.core/system","reagent.core.atom","tunnl71.ghwebpage.core/page","system","tunnl71.ghwebpage.core/init!","cljs.core/enable-console-print!","reagent.dom.render","js/document","cljs.core/chunk-first"],"sourcesContent":["(ns tunnl71.ghwebpage.core\n  (:require-macros [hiccups.core :as hiccups :refer [html]])\n  \n  (:require\n   [reagent.core :as r]\n   [reagent.dom :as rd]\n   [react-dom :as react-dom]\n\n   [tunnl71.tools.core :as t]\n   [clojure.core.async :as a]\n\n   [clojure.spec.alpha :as s]\n   [com.rpl.specter :as sp]\n\n\n   ;; \n   ;; [hiccup.page :refer [html5 include-css include-js]]\n\n\n   ;; ;; [html-to-md.html-to-md]\n   ;; ;; [html-to-md.transformer]\n   ;; [html-to-md.core]\n\n   ;; [tunnl71.data.keyword :as kw]\n   ;; [tunnl71.tools.core :as t]\n   ;; [clojure.spec.alpha :as s]\n   ;; [clojure.spec.gen.alpha :as g]\n   ;; [manifold.stream :as ms]\n   ;; [clojure.core.async :as a]\n   ;; [com.rpl.specter :as sp]\n   ;; [reagent.core :as r]\n\n   \n   [hiccups.runtime :as hiccupsrt]\n   \n   )) \n\n\n(defn edn->hiccup\n  ([edn]\n   (cond\n     (map? edn)\n     [:div.row\n      [:div.col\n       (into [:div.list-group]\n             (for [[k v] edn]\n               [:div.list-group-item {:key (t/uuid)}\n                [:div.row\n                 [:div.col-3 #_:h5 (edn->hiccup  k)]\n                 [:div.col-5  (edn->hiccup v)]]]))]]\n\n     #_(instance? clj.core/PersistentVector edn)\n     (sequential? edn)\n     [:p (apply str (interpose \" \" edn))]\n\n     )))\n\n#_(defn input-area\n    [display ^ratom x]\n    (fn [display x]\n      (r/with-let [edit-buffer (r/atom (pr-str @x))]\n        ;; edit\n        [:div {:style {:display @display}}\n         [:textarea.w3-input #_:input {:type \"textarea\"\n                                       :style {:background-color \"black\" :color \"lightgrey\" }\n                                       :default-value \"\"\n                                       :rows (int (/ (count (pr-str @x)) 50))\n                                       :cols (mod (count (pr-str @x)) 50)\n                                       :auto-complete \"off\"\n                                       :value @edit-buffer\n                                       :on-change #(reset! edit-buffer (-> % .-target .-value))\n                                       :on-key-press (fn [e]\n                                                       (println (.-charCode e))\n                                                       (when (= 13 (.-charCode e))\n                                                         (reset! x (cljs.tools.reader/read-string @edit-buffer))\n                                                         (println @x)\n                                                         (reset! display \"none\")\n                                                         (tap> \n                                                          {:fn\n                                                           (fn [sys]\n                                                             (ajax.core/POST \"/api/insert!\"\n                                                                             {:params {:body (pr-str @x #_doc_)}\n                                                                              ;; :format :json\n                                                                              :handler (fn [res] (println \"insert! response: \" (pr-str res)))}))})))\n                                       :auto-focus true}]])))\n\n#_(def data\n    (let [hiccup-data [:body\n                       [:div\n                        [:h1 \"speclike\"]\n\n                        [:div\n                         [:h2 \"password\"]\n                         #_[:textarea.w3-input\n                            {:type \"textarea\"\n                             :style {:background-color \"black\" :color \"lightgrey\" }\n                             :default-value \"\"\n                             :auto-complete \"off\"\n                             ;; :on-change #(reset! edit-buffer (-> % .-target .-value))\n                             :on-key-press (fn [e]\n                                             (println (.-charCode e))\n                                             (when (= 13 (.-charCode e))\n                                               \n                                               ))\n                             :auto-focus true}]\n                         ]\n                        \n                        [:div\n                         [:h1 \"indexes\"]\n                         [:ul\n                          [:p (interpose \" ~ \" [\"suture\" \"index\" \"spec\" \"keyword\" \"set\" \"menge\" \"multiple\"])]\n                          [:p (interpose \" \" [\"name collision\" \"https://github.com/hsestupin/html-to-md/tree/master\" \"https://github.com/simon-brooke/html-to-md/blob/master/src/html_to_md/blogger_to_md.clj\"])]\n\n                          [:p (interpose \" \" [\"edn currency\" \"token markets\" \"tokens as indexes\"])]\n\n                          (edn->hiccup \"rename markets\")]]\n\n                        [:div.w3-container\n                         [:h1 \"links\"]\n                         #_[:a {:href \"https://www.facebook.com/profile.php?id=100093746423527\"} \"facebook\"]\n\n                         [:div.w3-container\n                          (for [{:keys [title url] :as e} [\n                                                           {:title \"tumblr\" :url \"https://www.tumblr.com/blog/arrowsfrom\"}\n                                                           {:title \"twitter\" :url \"https://twitter.com/veixq9\"}\n                                                           {:title \"soundcloud\" :url \"https://soundcloud.com/veixq9\"}\n                                                           {:title \"deviantart\" :url \"https://www.deviantart.com/likebad\"}\n                                                           {:title \"mastodon\" :url \"https://mastodon.social/\"}\n                                                           {:title \"github\" :url \"https://github.com/veixq9\"}]]\n\n                            [:a {:href url}\n                             [:div.w3-cell-row\n                              [:div.w3-cell {:style {:width \"10%\"}} [:p title]]\n                              [:div.w3-cell [:p url]]]\n                             \n                             #_[:img {:src \"https://www.tumblr.com/\" }]]\n                            )]]]\n\n                       #_[:div\n                          [:p \"twisted scrolls & scrolls\"]\n                          [:img {:src \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRPAO7OWsHvaRVYOreIzT32W2LB_ATC9H8VnYMaGYEwbXVliKGKjGhztnwi-44ZZ8UWK20&usqp=CAU\"}]]\n                       \n                       #_[:div\n                          [:h1 \"indexes\"]\n                          [:div\n                           [:h2 \"a market\"]\n                           [:ul \"market\"\n                            [:li \"hello\"]\n                            [:img {:src \"https://assets-prd.ignimgs.com/2022/03/22/witchercomparison-1647953448163.jpg\"}]]]\n\n                          \n                          \n                          [:img {:src \"https://scontent-ber1-1.xx.fbcdn.net/v/t39.30808-6/393487513_191144684020411_1345394949302923686_n.jpg?_nc_cat=101&ccb=1-7&_nc_sid=5f2048&_nc_ohc=Y3ASXlAoIIMAX9PdLcS&_nc_ht=scontent-ber1-1.xx&oh=00_AfDjD0RyQ-WO8ac9OW0NHihHJz_keygX5lpcU2iDuq3o4w&oe=65394B87\"}]\n                          \n                          [:img {:src \n                                 \"https://scontent-ber1-1.xx.fbcdn.net/v/t39.30808-6/394036975_193008083834071_5319461004562019138_n.jpg?_nc_cat=100&ccb=1-7&_nc_sid=5f2048&_nc_ohc=OQKMrDzPvtoAX9hH3Kj&_nc_ht=scontent-ber1-1.xx&oh=00_AfAYOFCVdCpTXLQ6fxnGMPPLXw-DcXNnYgDwyEsgTIYBRw&oe=6537FF66\"}]]]\n          html-data (hiccups/html hiccup-data)]\n\n      ;; md-data (html-to-md.core/html-to-md html-data)\n      ;; (html-to-md.html-to-md/markdown-html html-data (html-to-md.html-to-md/markdown-dispatcher))\n      #_(html-to-md.core/html-to-md-string html-data)\n\n      hiccup-data))\n\n(def data\n  (let [hiccup-data [:body\n                     [:div\n                      [:div.w3-container\n                       [:h1 \"links\"]\n                       [:div.w3-container\n                        (for [{:keys [title url] :as e} [\n                                                         {:title \"tumblr\" :url \"https://www.tumblr.com/blog/arrowsfrom\"}\n                                                         {:title \"twitter\" :url \"https://twitter.com/veixq9\"}\n                                                         {:title \"soundcloud\" :url \"https://soundcloud.com/veixq9\"}\n                                                         {:title \"deviantart\" :url \"https://www.deviantart.com/likebad\"}\n                                                         {:title \"mastodon\" :url \"https://mastodon.social/\"}\n                                                         {:title \"github\" :url \"https://github.com/veixq9\"}]]\n\n                          [:a {:href url}\n                           [:div.w3-cell-row\n                            [:div.w3-cell {:style {:width \"20%\"}} [:p title]]\n                            [:div.w3-cell [:p url]]]\n                           #_[:img {:src \"https://www.tumblr.com/\" }]]\n                          )]]]]\n        html-data (hiccups/html hiccup-data)]\n    hiccup-data))\n\n\n\n(def system\n  (r/atom\n   {}))\n\n(defn page\n  [system]\n  (fn [system]\n    [:div.w3-container.w3-cell-row {:style\n                                    #_(:palette @system)\n                                    {:color \"lightgrey\"} }\n     \n     ;; ================= middle column ========================================\n     [:div.w3-container.w3-cell {:style {:float :top :margin-top \"50%\"}}\n      [:div#content.w3-cell-row.w3-container\n       [:h1 \"VEIXQ9\"]]\n      [:hr]\n      data]]))\n\n(defn init!\n  []\n  (enable-console-print! )\n  (rd/render [page system] (.getElementById js/document \"app\")))   \n\n"]}