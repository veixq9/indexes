{"version":3,"sources":["clojure/core/matrix/impl/mathsops.cljc"],"mappings":";AAMA,qDAAA,rDAAcA,kHACHC;AADX,AAGW,QAAG,KAAA,JAAGA,aAASC;;AAE1B,qDAAA,rDAAcC,kHACHF;AADX,AAGW,wBAAA,hBAAG,CAAGA,IAAEC;;AAEnB,8CAAA,AAAA,9CAAKE;AAsCL,AAAA,AAAAC,wCAAA,gDAAAJ;AAAA,AAAA,OAAAK,SAAAL;;;AAAA,AAAAM,yCAAA,iDAAAN;AAAA,AAAA,OAAAO,UAAAP;;;AAAA,AAAAQ,yCAAA,iDAAAR;AAAA,AAAA,OAAAS,UAAAT;;;AAAA,AAAAU,yCAAA,iDAAAV;AAAA,AAAA,OAAAW,UAAAX;;;AAAA,AAAAY,yCAAA,iDAAAZ;AAAA,AAAA,OAAAa,UAAAb;;;AAAA,AAAAc,yCAAA,iDAAAd;AAAA,AAAA,OAAAe,UAAAf;;;AAAA,AAAAgB,wCAAA,gDAAAhB;AAAA,AAAA,OAAAiB,SAAAjB;;;AAAA,AAAAkB,yCAAA,iDAAAlB;AAAA,AAAA,OAAAmB,UAAAnB;;;AAAA,AAAAoB,wCAAA,gDAAApB;AAAA,AAAA,OAAAqB,SAAArB;;;AAAA,AAAAsB,0CAAA,kDAAAtB;AAAA,AAAA,OAAAuB,WAAAvB;;;AAAA,AAAAwB,wCAAA,gDAAAxB;AAAA,AAAA,OAAAyB,SAAAzB;;;AAAA,AAAA0B,0CAAA,kDAAA1B;AAAA,AAAA,OAAA2B,WAAA3B;;;AAAA,AAAA4B,0CAAA,kDAAA5B;AAAA,AAAA,OAAA6B,UAAA7B;;;AAAA,AAAA8B,2CAAA,mDAAA9B;AAAA,AAAA,OAAA+B,YAAA/B;;;AAAA,AAAAgC,wCAAA,gDAAAhC;AAAA,AAAA,OAAAiC,SAAAjC;;;AAAA,AAAAkC,yCAAA,iDAAAlC;AAAA,AAAA,OAAAmC,UAAAnC;;;AAAA,AAAAoC,yCAAA,iDAAApC;AAAA,AAAA,OAAAqC,UAAArC;;;AAAA,AAAAsC,wCAAA,gDAAAtC;AAAA,AAAA,OAAAuC,SAAAvC;;;AAAA,AAAAwC,yCAAA,iDAAAxC;AAAA,AAAA,OAAAyC,UAAAzC;;;AAAA,AAAA0C,+CAAA,uDAAA1C;AAAA,AAAA,OAAA2C,eAAA3C;;;AAAA,AAAA4C,+CAAA,uDAAA5C;AAAA,AAAA,OAAA6C,eAAA7C","names":["clojure.core.matrix.impl.mathsops/to-degrees*","x","Math/PI","clojure.core.matrix.impl.mathsops/to-radians*","clojure.core.matrix.impl.mathsops/maths-ops","clojure.core.matrix.impl.mathsops/abs","Math/abs","clojure.core.matrix.impl.mathsops/acos","Math/acos","clojure.core.matrix.impl.mathsops/asin","Math/asin","clojure.core.matrix.impl.mathsops/atan","Math/atan","clojure.core.matrix.impl.mathsops/cbrt","Math/cbrt","clojure.core.matrix.impl.mathsops/ceil","Math/ceil","clojure.core.matrix.impl.mathsops/cos","Math/cos","clojure.core.matrix.impl.mathsops/cosh","Math/cosh","clojure.core.matrix.impl.mathsops/exp","Math/exp","clojure.core.matrix.impl.mathsops/floor","Math/floor","clojure.core.matrix.impl.mathsops/log","Math/log","clojure.core.matrix.impl.mathsops/log10","Math/log10","clojure.core.matrix.impl.mathsops/round","Math/rint","clojure.core.matrix.impl.mathsops/signum","Math/signum","clojure.core.matrix.impl.mathsops/sin","Math/sin","clojure.core.matrix.impl.mathsops/sinh","Math/sinh","clojure.core.matrix.impl.mathsops/sqrt","Math/sqrt","clojure.core.matrix.impl.mathsops/tan","Math/tan","clojure.core.matrix.impl.mathsops/tanh","Math/tanh","clojure.core.matrix.impl.mathsops/to-degrees","Math/toDegrees","clojure.core.matrix.impl.mathsops/to-radians","Math/toRadians"],"sourcesContent":["(ns clojure.core.matrix.impl.mathsops\n  #?(:cljs (:require-macros [clojure.core.matrix.impl.mathsops :refer [def-mop def-mops]])))\n\n;; data structure for code generation of maths operations\n;; format is (<symbol> <java.lang.Math equivalent>)\n\n(defn ^double to-degrees*\n  [^double x]\n  #?(:clj (Math/toDegrees x)\n     :cljs (/ (* x 180.0) Math/PI)))\n\n(defn ^double to-radians*\n  [^double x]\n  #?(:clj (Math/toRadians x)\n     :cljs (/ (* x Math/PI) 180.0)))\n\n(def maths-ops\n  '[(abs Math/abs)\n    (acos Math/acos)\n    (asin Math/asin)\n    (atan Math/atan)\n    (cbrt Math/cbrt)\n    (ceil Math/ceil)\n    (cos Math/cos)\n    (cosh Math/cosh)\n    (exp Math/exp)\n    (floor Math/floor)\n    (log Math/log)\n    (log10 Math/log10)\n    (round Math/rint)\n    (signum Math/signum Math/sign)\n    (sin Math/sin)\n    (sinh Math/sinh)\n    (sqrt Math/sqrt)\n    (tan Math/tan)\n    (tanh Math/tanh)\n    (to-degrees Math/toDegrees to-degrees*)\n    (to-radians Math/toRadians to-radians*)])\n\n(defmacro def-mop\n  \"Define a mathematical operator function.\"\n  [op-sym fn-sym]\n  `(defn ~op-sym\n     ~(vary-meta\n        `([~(vary-meta 'x assoc :tag 'double)]\n          (~fn-sym ~'x))\n        assoc :tag double)))\n\n(defmacro def-mops\n  []\n  `(do\n     ~@(for [[sym# op#] maths-ops]\n         `(def-mop ~sym# ~op#))))\n\n(def-mops)\n\n"],"x_google_ignoreList":[0]}